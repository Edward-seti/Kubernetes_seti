apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mi-app
  template:
    metadata:
      labels:
        app: mi-app
    spec:
      containers:
        - name: mi-app
          image: nginx:alpine  # ‚úÖ Imagen m√°s ligera y r√°pida
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "800m"
              memory: "512Mi"
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: html-configmap
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
            - name: mi-volumen  # üî• Aqu√≠ se monta el PVC
              mountPath: /usr/share/nginx/html  # Carpeta donde se almacenar√°n los archivos persistentes

          # üîç **Startup Probe** (Nuevo) - Asegura que el contenedor est√° listo antes de verificar Liveness y Readiness
          startupProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 0
            periodSeconds: 5
            #timeoutSeconds: 5
            failureThreshold: 6

          # üîç **Liveness Probe** - Verifica si el contenedor sigue vivo, si falla, Kubernetes lo reinicia
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 40
            periodSeconds: 30
            #timeoutSeconds: 5
            failureThreshold: 5
          
          # üîç **Readiness Probe** - Verifica si el contenedor puede aceptar tr√°fico
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 40
            periodSeconds: 5
            #timeoutSeconds: 5
            failureThreshold: 3

      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: html-configmap
          configMap:
            name: mi-configmap
        - name: mi-volumen  # ‚úÖ Agregamos el PVC
          persistentVolumeClaim:
            claimName: mi-pvc  # Debe coincidir con el PVC creado
